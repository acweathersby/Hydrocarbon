import "@radiate";
import "./main-style.css";
import header from "./header.wick";
import guide from "./guide.wick";
import { createAddHocParser } from "/@candlelib/hc-full";

let text_value = `<> A > \\new`;
let timer = performance.now();
let active = false;
let error = "";
let parser_input = "new";
let history = [];
let grammar = null;
let parser = null;
let lookup = null;
let state_offset = 0;

async function $parseGrammar(text_value){

    if(active) return;

    active = true;
    try {
        const { parse, grammar:grm, rlu } = await createAddHocParser(text_value);
        grammar = grm;
        console.log(grm, rlu);
        parser = parse;
        lookup = rlu;
        error = ''
    } catch(e){
        error = e.toString();
        console.error(e);
    }
    active = false;
}

function $parser(parser, grammar, parser_input, lookup){

    if(parser){
        const { result, history:hst }= parser(parser_input);

        history = hst.map(([ptr, type, off, len])=>({ptr:ptr, type:type, off:off, len:len, str:lookup.get(ptr & 0xFFFF)}));

    }
}

export default <div id="app">

    <head>
        <title> Hydrocarbon | A modern parser compiler </title>
    </head>

    <header/>

    <h1 id="header"> Hydrocarbon</h1>

    <p>
        Hydrocarbon is a modern parser compiler that can target TypeScript, JavaScript, Rust, C++, and Webassembly.

        Don't take our word for it. Try it out yourself!.
    </p> 
    
    <textarea value={text_value}></textarea>
    <textarea value={parser_input}></textarea>
    
    <br>
    <br>

    <container data={ history } limit={1} offset={state_offset} element=div>
        <div>
            <pre>
                State Pointer: {ptr}; Token type: {type} Token offset: {off} Token length: {len}
            </pre>
            <pre>{str}</pre>
        </div>
    </container>
    
    <style>
        #error-report pre {
            padding:0;
            margin:0
        }
    </style>

    <guide/>

</div>