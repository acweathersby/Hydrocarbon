# Copyright (C) 2021 Anthony Weathersby - The Hydrocarbon Parser Compiler
# see /source/typescript/hydrocarbon.ts for full copyright and warranty 
# disclaimer notice.

# version 5.0

@IMPORT ./symbols.hcg as sym

@IMPORT ./comments.hcg as cm

@IGNORE g:sp g:nl tk:cm::comment

########################################################################################################################
######################################  FUNCTIONS
########################################################################################################################

<> hcg_functions > 
        out_of_band_function
    |   error_function
    |   reduce_function
    |   function_clause

<> out_of_band_function > 

        js_function_start_symbol sym::reference_symbol { tk:js_data } 
                 
                                                                    f:r {  { 
                                                                            type:"out_of_band",  
                                                                            reference:$2,     
                                                                            txt:$4.toString(),
                                                                            tok
                                                                        }  }

    |   js_function_start_symbol sym::production_symbol function_body_index? { tk:js_data } 

                                                                    f:r {  { 
                                                                            type:"out_of_band",  
                                                                            production:$2,
                                                                            index:$3 || [0],
                                                                            txt:$5.toString(),
                                                                            tok
                                                                        }  }

    |    js_function_start_symbol sym::production_symbol function_body_index? sym::reference_symbol

                                                                    f:r {  { 
                                                                            type:"out_of_band",  
                                                                            production:$2,
                                                                            index:$3 || [0],
                                                                            reference:$4,
                                                                            tok
                                                                        }  }

<> function_body_index > ( 
    \. ( g:num | \* | sym::reference_symbol ) 
    
    f:r{ $2.toString() == "*" ? Infinity : typeof $2 == "object" ? $2 : parseInt($2) }
 )(+)

                                                                                              

<> error_function > js_function_start_symbol t:erh { tk:js_data } { tk:js_data }                    f:r { 
                                                                       { 
                                                                           type:"ERROR_RECOVERY",     
                                                                        
                                                                            lexer_text:$4, 
                                                                            body_text:$7,
                                                                            tok
                                                                        }
                                                                    }
<> reduce_function > js_function_start_symbol ( t:return | t:r ) { tk:js_data }                                 
                                                                    f:r { {
                                                                        type:"RETURNED",        
                                                                        txt: $4.toString(), 
                                                                        name:"", 
                                                                        env:false,
                                                                        ref:"",     
                                                                        IS_CONDITION:true,
                                                                        tok
                                                                        }
                                                                    }

     | js_function_start_symbol ( t:return | t:r ) sym::reference_symbol     
                                                                     f:r { 
                                                                         {
                                                                            type:"referenced-function",             
                                                                            ref:$3,
                                                                            tok
                                                                        }
                                                                    }


<> js_data > js_primitive
    | js_data_block
    | js_data js_primitive                                          
    | js_data js_data_block                                         
    | $eof

<> js_primitive > g:id 
    | g:num 
    | g:sp 
    | g:tab 
    | g:nl 
    | g:sym 

<> js_data_block > \{ js_data \}                                   

<> js_function_start_symbol > \f:                                  
    
