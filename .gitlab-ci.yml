image: node:latest

stages:
  - fetch
  - build
  - test
  - deploy

workflow:
  rules:
    - if: $CI_COMMIT_REF_NAME == "gitlab-ci"
      when: always
    - when: never

# cache:
#   paths:
#     - node_modules/
#     - packages/core/hc_ts_common/build/
#     - packages/core/hc_asytrip/build/
#     - packages/core/hc_bytecode/build/
#     - packages/core/hc_grammar/build/
#     - packages/core/hc_root/build/
#     - packages/core/hc_tools/build/
#     - packages/rt_typescript/build/
#     - packages/**/publish.bounty
#     - packages/**/package.json

fetch_dependencies:
  stage: fetch
  script:
    - npm config set registry http://$NPM_REGISTRY
    - npm install --no-audit

  artifacts:
    expire_in: 15 min
    paths:
      - node_modules/

# BUILD ----------------------------------------------------------------------

build_typescript_packages:
  stage: build

  script:
    - npm install typescript
    - npx tsc -p ./packages/core/hc_ts_common/tsconfig.json || true
    - npx tsc -p ./packages/core/hc_asytrip/tsconfig.json || true
    - npx tsc -p ./packages/core/hc_bytecode/tsconfig.json || true
    - npx tsc -p ./packages/core/hc_grammar/tsconfig.json || true
    - npx tsc -p ./packages/core/hc_root/tsconfig.json || true
    - npx tsc -p ./packages/core/hc_tools/tsconfig.json || true
    - npx tsc -p ./packages/rt_typescript/tsconfig.json || true

  artifacts:
    expire_in: 2 hours
    paths:
      - packages/core/hc_ts_common/build/
      - packages/core/hc_asytrip/build/
      - packages/core/hc_bytecode/build/
      - packages/core/hc_grammar/build/
      - packages/core/hc_root/build/
      - packages/core/hc_tools/build/
      - packages/rt_typescript/build/
  dependencies:
    - fetch_dependencies

# TEST & VERSION -----------------------------------------------------------

version_ts_modules:
  stage: test

  before_script:
    - TOKENED_REPO=http://$GITLAB_ACCESS_TOKEN@$GITLAB_HOST:$GITLAB_HTTP_PORT/$GITLAB_REPO_PATH
    - git remote add releases $TOKENED_REPO || git remote set-url releases $TOKENED_REPO
    - git fetch --all

  script:
    - npm run version_ts_packages
  artifacts:
    paths:
      - "*.bounty"
      - "*.temp.json"
      - packages/**/package.json

  dependencies:
    - fetch_dependencies
    - build_typescript_packages

# DEPLOY ------------------------------------------------------------------

publish_ts_packages:
  stage: deploy

  rules:
    - when: never

  before_script:
    - echo '//${NPM_REGISTRY}/:_authToken=${NPM_TOKEN}'> ~/.npmrc

  script:
    - npm config set registry http://$NPM_REGISTRY
    - ./root.publish.bounty

  dependencies:
    - version_ts_modules
    - fetch_dependencies
    - build_typescript_packages

deploy_to_gitlab_branch:
  stage: deploy

  before_script:
    - TOKENED_REPO=http://$GITLAB_ACCESS_TOKEN@$GITLAB_HOST:$GITLAB_HTTP_PORT/$GITLAB_REPO_PATH
    - git remote add releases $TOKENED_REPO || git remote set-url releases $TOKENED_REPO
    - git checkout --track releases/$STAGED_VERSION_BRANCH
    - git pull

  script:
    - ./root.commit.bounty
    - git push -f releases HEAD:$STAGED_VERSION_BRANCH

  dependencies:
    - version_ts_modules
    - fetch_dependencies
    - build_typescript_packages
##
# reference https://docs.gitlab.com/ee/ci/yaml/
